name: Auto Create Gitalk Issues

on: 
  push:
    paths:
      - "_posts/**"

jobs:
  create-issues:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Get new posts
        run: |
          git fetch origin ${{ github.event.before }}
          NEW_FILES=$(git diff --name-status ${{ github.event.before }} ${{ github.sha }} | grep "^A" | awk '{print $2}' | grep "^_posts/" || true)
          echo "new_files=$NEW_FILES" >> $GITHUB_ENV
      
      - name: Create Issues
        if: env.new_files != ''
        run: | 
          echo "luoyang new files: $new_files"
          for file in $new_files; do
            echo "luoyang file: $file"
            filename=$(basename "$file" .md)
            echo "luoyang filename: $filename"
            path="/$filename/"
            id=$(echo -n "$path" | md5sum | awk '{print $1}')
            echo "luoyang id: $id"
            title="$filename"
            body="Comments for [$title]($path)"
            echo "luoyang body: $body"

            echo "luoyang token: ${{ secrets.GITALK_TOKEN }}"
            existing=$(curl -s \
              -H "Authorization: token ${{ secrets.GITALK_TOKEN }}" \
              "https://api.github.com/repos/BlackDn/Gitalk-for-Blog/issues?state=all&labels=$id" \
              | grep -c "\"labels\":")
            echo "luoyang existing: $existing"

            if [ "$existing" -eq 0 ]; then
            echo "Creating issue for $path"
            curl -X POST \
              -H "Authorization: token ${{ secrets.GITALK_TOKEN }}" \
              -H "Accept: application/vnd.github.v3+json" \
              https://api.github.com/repos/BlackDn/Gitalk-for-Blog/issues \
              -d "{\"title\":\"$title\",\"body\":\"$body\",\"labels\":[\"gitalk\",\"$id\"]}"
            else
              echo "Issue for $path already exists, skipping."
            fi
          done
